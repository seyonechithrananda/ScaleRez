{"ast":null,"code":"var _jsxFileName = \"/Users/adarkahiri/Hackathon-Projects/mchacks-srgan/src/App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport './tailwind_styles.css';\nimport 'antd/dist/antd.css';\nimport { Upload, message, Button, Icon } from 'antd';\n\nfunction App() {\n  const props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text'\n    },\n\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n\n  };\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadedFile, setUploadedFile] = useState();\n\n  function handleFileSelect(info) {\n    console.log(info.file.originFileObj); //setSelectedFile(event.target.files[0])\n  }\n\n  function handleFileUpload(event) {\n    const fd = new FormData();\n    fd.append('image', selectedFile);\n    axios.post('http://localhost:5000/upload_file', fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n    }).catch(error => console.log(error));\n    console.log(selectedFile);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"text-4xl self-center font-bold bg-blue-200 py-2 pl-64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"ScaleRes.\"), React.createElement(\"div\", {\n    className: \"px-64 pt-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-base\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Enter a blurry image you'd like to scale up. Our MegaSuperAdvanced\\u2122 Algorithms will then increase the resolution of your image using [insert buzzword here]\"), React.createElement(Upload, Object.assign({}, props, {\n    onChange: handleFileSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \" Click to Upload\")), React.createElement(Button, {\n    type: \"primary\",\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Upload\")), React.createElement(\"div\", {\n    className: \"mt-3 flex justify-between px-64 w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Original\")), React.createElement(\"div\", {\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"SuperSized\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adarkahiri/Hackathon-Projects/mchacks-srgan/src/App.js"],"names":["React","useState","axios","Upload","message","Button","Icon","App","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","success","error","selectedFile","setSelectedFile","uploadedFile","setUploadedFile","handleFileSelect","originFileObj","handleFileUpload","event","fd","FormData","append","post","then","res","fileName","filePath","data","catch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport './tailwind_styles.css'\nimport 'antd/dist/antd.css';\n\nimport {Upload, message, Button, Icon} from 'antd'\n\nfunction App() {\n\n  const props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n  };\n\n  const [selectedFile, setSelectedFile] = useState()\n  const [uploadedFile, setUploadedFile] = useState()\n\n  function handleFileSelect (info) {\n    console.log(info.file.originFileObj)\n    //setSelectedFile(event.target.files[0])\n  }\n\n  function handleFileUpload (event) {\n    const fd = new FormData ()\n\n    fd.append('image', selectedFile)\n    axios.post('http://localhost:5000/upload_file', fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    .then(res => {\n      const {fileName, filePath} = res.data \n      setUploadedFile({fileName, filePath})\n    })\n    .catch(error => console.log(error))\n    console.log(selectedFile)\n    \n  }\n\n  return (\n    <>\n      <h1 className=\"text-4xl self-center font-bold bg-blue-200 py-2 pl-64\">ScaleRes.</h1>\n   \n      <div className=\"px-64 pt-10\">\n\n        <p className=\"text-base\">Enter a blurry image you'd like to scale up. Our MegaSuperAdvancedâ„¢ \n        Algorithms will then increase the resolution of your image using [insert buzzword here]</p>\n\n        <Upload {...props} onChange={handleFileSelect}>\n          <Button>\n            <Icon type=\"upload\" /> Click to Upload\n          </Button>\n        </Upload>\n        <Button type=\"primary\" className=\"mt-3\">Upload</Button>\n      </div>\n\n      <div className=\"mt-3 flex justify-between px-64 w-full\">\n        <div className=\"text-left\"> \n          <h2 className=\"text-lg\">Original</h2>\n        </div>\n        <div className=\"text-right\">\n          <h2 className=\"text-lg\">SuperSized</h2>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}